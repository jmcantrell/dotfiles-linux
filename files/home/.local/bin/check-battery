#!/usr/bin/env bash

# Check battery power level and hibernate if necessary.

set -eu

# Battery capacity percentages that trigger notifications.
low_capacity=25      # initial alert so user is aware of low power
critical_capacity=15 # intermediate alert that hibernation is approaching
hibernate_capacity=5 # final alert that hibernation countdown has started

# If power is restored after countdown is started, abort hibernation.
hibernate_grace=30

power_supply=/sys/class/power_supply

# Don't do anything if there are no batteries.
# This is probably not a mobile device.
if [[ ! -d $power_supply/BAT0 ]]; then
    printf "There are no batteries to monitor.\n"
    exit 0
fi

# Returns a status indicating whether or not external power is being supplied.
is_ac_online() {
    (($(<"$power_supply"/AC/online) == 1))
}

# Don't do anything if plugged in.
# There should be no danger of losing power.
if is_ac_online; then
    exit 0
fi

# Notifies the user of events, replacing the previous notification.
notify() {
    notify-send -h string:x-canonical-private-synchronous:"${0##*/}" "$@"
}

# Returns the capacity of the most charged battery, as it's probably the best
# indicator of impending power loss.
max_discharging_capacity() {
    local max_capacity=0
    local battery capacity

    for battery in "$power_supply"/BAT*; do
        if [[ $(<"$battery"/status) == Discharging ]]; then
            capacity=$(<"$battery"/capacity)
            if ((capacity > max_capacity)); then
                max_capacity=$capacity
            fi
        fi
    done

    printf "%s\n" "$max_capacity"
}

# Hibernate the system after a countdown, but give the user a grace period
# where restoring the power will abort the hibernation.
wait_for_power_or_hibernate() {
    local countdown=$hibernate_grace

    while ((countdown > 0)); do
        if is_ac_online; then
            notify -i battery-low-charging-symbolic \
                "Power supply was restored" \
                "Aborting system hibernation..."
            return
        fi
        ((countdown--))
        sleep 1
    done

    systemctl hibernate
}

capacity=$(max_discharging_capacity)

if ((capacity <= hibernate_capacity)); then
    notify -u critical -i battery-empty-symbolic \
        "Battery almost empty: $capacity%" \
        "System will hibernate in $hibernate_grace seconds..."
    wait_for_power_or_hibernate
elif ((capacity <= critical_capacity)); then
    notify -u critical -i battery-caution-symbolic \
        "Battery critical: $capacity%" \
        "System will hibernate at $hibernate_capacity%"
elif ((capacity <= low_capacity)); then
    notify -u critical -i battery-low-symbolic \
        "Battery low: $capacity%" \
        "Attach power supply to avoid hibernation"
fi
