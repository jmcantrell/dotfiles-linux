#!/usr/bin/env bash

set -euo pipefail

usage="Manage text snippets with bemenu.

Usage:
    ${0##*/} [OPTIONS] ACTION NAME

Options:
    -h              show this help text and exit
    -D DIRECTORY    directory in which to store snippets

Actions:
    read            read snippet to clipboard
    write           write clipboard to snippet
    delete          delete snippet
    edit            open snippet in editor
    type            type snippet to active window"

do_read() {
    snippets "${snippets_options[@]}" read "$1" | wl-copy
}

do_write() {
    wl-paste | snippets "${snippets_options[@]}" write "$1"
}

do_type() {
    wtype -s 25 "$(snippets "${snippets_options[@]}" read "$1")"
}

snippets_options=()

while getopts ":D:h" option; do
    case $option in
    D) snippets_options+=(-D "$OPTARG") ;;
    h)
        printf "%s\n" "$usage"
        exit 0
        ;;
    *)
        printf "Invalid option: %s\n" "$OPTARG" >&2
        exit 1
        ;;
    esac
done && shift $((OPTIND - 1))

action=${1:?missing action}

case $action in
read | write | delete | edit | type) ;;
*)
    printf "Invalid action: %s\n" "$action" >&2
    exit 1
    ;;
esac

if ! name=$(snippets list | bemenu -b -p "$action snippet" | head -n1) || [[ -z $name ]]; then
    printf "No snippet name entered or selected\n" >&2
    exit 1
fi

export EDITOR=${VISUAL:-gvim}

case $action in
delete | edit) snippets "${snippets_options[@]}" "$action" "$name" ;;
*) do_"$action" "$name" ;;
esac
