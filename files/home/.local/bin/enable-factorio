#!/usr/bin/env bash

# Install or update Factorio.

set -euo pipefail

cache_dir=${XDG_CACHE_HOME:-$HOME/.cache}/factorio
base_url=https://factorio.com

branch=${FACTORIO_BRANCH:-alpha}
release=${FACTORIO_RELEASE:-stable}
version=${FACTORIO_VERSION:-$(curl -sSL "$base_url"/api/latest-releases | jq -r ".$release.$branch")}

archive_url=$base_url/get-download/$version/$branch/linux64
archive_file=$cache_dir/factorio_${branch}_x64_$version.tar.xz

if [[ ! -f $archive_file ]]; then
    printf "Downloading Factorio %s (%s) v%s: %s\n" \
        "$branch" "$release" "$version" "$archive_url"

    temp_file=$archive_file.part
    mkdir -p "$(dirname "$temp_file")"

    curl --get --fail --location \
        --retry 10 --retry-delay 3 --continue-at - \
        --data-urlencode username="$FACTORIO_USERNAME" \
        --data-urlencode token="$FACTORIO_TOKEN" \
        --output "$temp_file" "$archive_url"

    mv -v "$temp_file" "$archive_file"
fi

opt_home=$HOME/.local/opt
opt_dir=$opt_home/factorio

rm -vrf "$opt_dir"
mkdir -p "$opt_home"

printf "Unpacking archive: %q\n" "$archive_file"
tar -vxf "$archive_file" -C "$opt_home"

bin=$HOME/.local/bin/factorio
mkdir -p "$(dirname "$bin")"
ln -vsfrn "$opt_dir"/bin/x64/factorio "$bin"
