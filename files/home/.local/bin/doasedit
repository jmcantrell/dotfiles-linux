#!/usr/bin/env bash

set -eu

me=${0##*/}
usage="Edit files with elevated privileges as the current user.

Usage:
    $me [-n] [-C FILE] [-u USER] [FILE...]

Options:
    See doas(1) for more information about options.

Environment:
    Files will be edited with DOAS_EDITOR (falling back to EDITOR).
"

usage() {
    printf "%s\n" "$usage"
    exit 0
}

die() {
    printf "ERROR: %s\n" "$*" >&2
    exit 1
}

doas_options=()

while getopts ":nC:u:h" option; do
    case $option in
    n) doas_options+=(-"$option") ;;
    C | u) doas_options+=(-"$option" "$OPTARG") ;;
    h) usage ;;
    *) die "Invalid option '$OPTARG'" ;;
    esac
done && shift $((OPTIND - 1))

doas() {
    command doas "${doas_options[@]}" "$@"
}

temp_dir=$(mktemp -d -t "${me}.XXXXXXXXXX")

mkdir -p "$temp_dir"
doas chown -R "$USER:$USER" "$temp_dir"
doas chmod 700 "$temp_dir"
printf -v cleanup "rm -rf %q" "$temp_dir"
trap "$cleanup" INT TERM EXIT

files=()
temp_files=()
owners=()
permissions=()

for path in "$@"; do
    if [[ -e $path && ! -f $path ]]; then
        die "Path is not a regular file: $path"
    fi
done

for path in "$@"; do
    # Ensure the path is absolute and dereferenced.
    file=$(realpath -m "$path")
    files+=("$file")

    # Generate temp path with the original embedded.
    temp_file=$temp_dir/${file##/}
    temp_files+=("$temp_file")

    # Grab file attributes or use defaults.
    if [[ -f $file ]]; then
        owners+=("$(stat -c %u:%g "$file")")
        permissions+=("$(stat -c %a "$file")")
    else
        owners+=(0:0)
        permissions+=(644)
    fi

    mkdir -p "$(dirname "$temp_file")"

    if [[ -f $file ]]; then
        doas cp "$file" "$temp_file"
        doas chmod 644 "$temp_file"
        doas chown "$USER:$USER" "$temp_file"
    fi
done

${DOAS_EDITOR:-$EDITOR} "${temp_files[@]}"

for ((i = 0; i < ${#files[@]}; i++)); do
    doas chown "${owners[i]}" "${temp_files[i]}"
    doas chmod "${permissions[i]}" "${temp_files[i]}"
    doas mkdir -p "$(dirname "${files[i]}")"
    doas cp --preserve=mode,ownership "${temp_files[i]}" "${files[i]}"
done
