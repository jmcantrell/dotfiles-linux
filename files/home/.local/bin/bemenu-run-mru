#!/usr/bin/env bash

# Run a menu-selected command, with the most recent ones listed first.
# If the command ends in a semicolon, it will be opened in a terminal.
# If the command ends in two semicolons, the terminal will be held open.

set -eu

history_size=${BEMENU_RUN_MRU_HISTSIZE:-100}
history_file=${XDG_CACHE_HOME:-$HOME/.cache}/${0##*/}/history

mkdir -p "$(dirname "$history_file")"
touch "$history_file"

mru_path() {
    cat "$history_file"                       # Shift the most recent entries to the top
    compgen -c | grep -vxF -f "$history_file" # ... of the full list of commands.
}

mru_add() {
    local cmd=${1:?missing command}
    {
        printf "%s\n" "$cmd"                            # Shift the most recent entry to the top
        grep -vx "$cmd" "$history_file"                 # ... of the previous entries.
    } | head -n"$history_size" | sponge "$history_file" # Letting the least recent entry drop off.
}

# Prompt user for a command.
cmd=$(mru_path | bemenu -i -p run)

# Remember it as recently used.
mru_add "$cmd"

preamble=()

if [[ $cmd == *\; ]]; then
    preamble+=("$TERMINAL")
    if [[ $cmd == *\;\; ]]; then
        preamble+=(--hold)
    fi
    preamble+=(-e)
fi

exec "${preamble[@]}" bash -c "${cmd%%;}"
