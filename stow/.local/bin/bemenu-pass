#!/usr/bin/env bash

set -eu

password_length=16

me=${0##*/}
usage="Interact with pass using bemenu.

Usage:
    $me [OPTIONS] [ACTION]

Options:
    -n NUMBER    generated password length
                 (default: $password_length)

Actions:
    choose       choose existing password (default)
    generate     generate a new password

In all cases, the password is copied to the clipboard.
"

pass_dir=${PASSWORD_STORE_DIR:-$HOME/.password-store}

usage() {
    printf "%s\n" "$usage"
    exit 0
}

die() {
    printf "ERROR: %s\n" "$*" >&2
    exit 1
}

pass_names() {
    if [[ ! -d $pass_dir ]]; then
        return
    fi

    local file

    find -L "$pass_dir" -type f -name "*.gpg" | while read -r file; do
        local name=${file#"$pass_dir"/}
        name=${name%.gpg}
        printf "%s\n" "$name"
    done
}

while getopts ":n:h" option; do
    case $option in
    n) password_length=$OPTARG ;;
    h) usage ;;
    *) die "Invalid option '$OPTARG'" ;;
    esac
done && shift $((OPTIND - 1))

action=${1:-choose}

case $action in
choose | generate) ;;
*) die "Invalid action '$action'" ;;
esac

name=$(pass_names | bemenu -b -p "$action password")

case $action in
choose) pass -c "$name" ;;
generate) pass generate -c -f "$name" "$password_length" ;;
esac

clipboard_seconds=${PASSWORD_STORE_CLIP_TIME:-45}

notify-send -i edit-copy \
    -t $((clipboard_seconds * 1000)) \
    -h string:x-canonical-private-synchronous:"$me" \
    "Password for '$name' copied to clipboard" \
    "Self-destructing in <b>$clipboard_seconds</b> seconds..." &
