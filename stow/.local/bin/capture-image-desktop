#!/usr/bin/env bash

set -eu

edit=0
delay=0
directory=$HOME
file_name=desktop_%FT%T%:z
file_type=png

name=${0##*/}
usage="Capture an image of the desktop.

Usage:
    $name [OPTIONS] [FILE]

Options:
    -g GEOMETRY     geometry of region to capture

    -f              capture focused window
    -r              select region to capture
    -s              select window to capture

    -m              include mouse cursor(s)

    -e              edit the captured image before saving

    -d NUMBER       number of seconds to wait before starting capture
                    (default: $delay)

    -D DIRECTORY    directory in which to store default output file
                    (default: $directory)

    -N FILENAME     filename to use for default output file
                    (default: $file_name)

    -E EXTENSION    extension to use for default output file
                    (default: $file_type)

Arguments:
    FILE            output file (used instead of default)
                    formats any sequences recognized by strftime
                    (default: $directory/$file_name.$file_type)
"

geometry_format='\(.x),\(.y) \(.width)x\(.height)'

focused_window_geometry() {
    swaymsg -t get_tree |
        jq -r ".. | select(.rect? and .visible? and .focused?) | .rect | \"$geometry_format\""
}

select_window_geometry() {
    swaymsg -t get_tree |
        jq -r ".. | select(.rect? and .visible?) | .rect | \"$geometry_format\"" |
        slurp -r
}

while getopts ":g:rfsmed:D:N:E:h" option; do
    case $option in
    g) geometry=$OPTARG ;;
    r) geometry=$(slurp) ;;
    f) geometry=$(focused_window_geometry) ;;
    s) geometry=$(select_window_geometry) ;;
    e) edit=1 ;;
    m) capture_mouse=1 ;;
    d) delay=$OPTARG ;;
    D) directory=$OPTARG ;;
    N) file_name=$OPTARG ;;
    E) file_type=$OPTARG ;;
    h)
        printf "%s\n" "$usage"
        exit
        ;;
    *)
        printf "ERROR: Invalid option '%s'\n" "$OPTARG"
        exit 1
        ;;
    esac
done && shift $((OPTIND - 1))

output_file=$(date +"${1:-$directory/$file_name.$file_type}")

capture_command=(grim)

if [[ -v geometry ]]; then
    capture_command+=(-g "$geometry")
fi

if [[ -v capture_mouse ]]; then
    capture_command+=(-c)
fi

if ((delay > 0)); then
    canberra-gtk-play -l "$delay" -i message
fi

mkdir -p "$(dirname "$output_file")"

if ((edit)); then
    "${capture_command[@]}" - | swappy -f - -o "$output_file"
else
    "${capture_command[@]}" "$output_file"
fi

canberra-gtk-play -i screen-capture &

notify-send -i media-record \
    "Captured desktop image" \
    "<u>${output_file/$HOME/\~}</u>" &

wl-copy -n <<<"$output_file"

printf "%s" "$output_file"
