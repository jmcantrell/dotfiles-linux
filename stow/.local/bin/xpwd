#!/usr/bin/env bash

set -eu

name=${0##*/}
usage="Print the working directory of a window.

Usage:
    $name [OPTIONS] [ID]

Options:
    -c    copy path to clipboard
    -n    notify user about copy
    -s    select window to use by clicking it

Arguments:
    ID    identifier of a window to use (e.g. 0x1234567)
                
If no window is selected with -w or ID, then the current window is used.
"

die() {
    echo "ERROR: $*" >&2
    exit 1
}

tmux_window_id() {
    tmux showenv -t "${1:?Missing session ID}" WINDOWID |
        awk -F= '{print $2}' | tr -d '[:space:]' |
        xargs -r -I{} printf "0x%x" "{}"
}

tmux_session_id() {
    while IFS= read -r -d $'\n' session_id; do
        if [[ $(tmux_window_id "$session_id") == "${1:?Missing window ID}" ]]; then
            echo "$session_id"
            return 0
        fi
    done < <(tmux list-sessions -F '#{session_id}')
    return 1
}

tmux_active_pane_pid() {
    tmux list-panes -F '#{session_id} #{pane_active} #{pane_pid}' |
        grep -m1 "^$(tmux_session_id "$1") 1 " |
        awk '{print $NF}' | tr -d '[:space:]'
}

selected_window_id() {
    xwininfo | grep -m1 "Window id" | awk '{print $4}'
}

active_window_id() {
    xprop -root | grep -m1 _NET_ACTIVE_WINDOW | awk '{print $NF}'
}

pid_for_window_id() {
    xprop -id "${1:?Missing window ID}" | grep -m1 PID | awk '{print $3}'
}

while getopts ":scnh" option; do
    case $option in
    s) window_id=$(selected_window_id) ;;
    c) copy_path_to_clipboard=1 ;;
    n) use_notifications=1 ;;
    h)
        echo "$usage"
        exit
        ;;
    *) die "Invalid option '$OPTARG'" ;;
    esac
done && shift $((OPTIND - 1))

if [[ ! -v window_id ]]; then
    window_id=${1:-$(active_window_id)}
fi

cwd=$HOME # fallback

window_pid=$(pid_for_window_id "$window_id")

if [[ -n $window_pid ]]; then
    readarray -t lines < <(
        pstree --long --show-pids --ascii --hide-threads "$window_pid" |
            head -n1 |
            sed 's/-+-.*$//' |                           # ignore branches
            sed 's/---/\n/g' |                           # one process per line
            sed 's/^\(.*\)(\([[:digit:]]\+\))$/\1=\2/' | # separate name and pid
            tac                                          # order processes by depth
    )

    # Show the processes on stderr for debugging.
    printf "%s\n" "${lines[@]}" >&2

    for line in "${lines[@]}"; do
        name=${line%%=*}
        pid=${line##*=}

        case $name in
        # If tmux is active in this window,
        # The current directory will be whatever it was when tmux was started.
        # It's more likely that the directory you want is the active pane's.
        tmux*) pid=$(tmux_active_pane_pid "$window_id") ;;

        # Programs like vim and ranger spawn subprocesses to do their work.
        # These should never have their own window, so it's safe to ignore them.
        xsel | xclip | ueberzug) continue ;;
        esac

        cwd_link=/proc/$pid/cwd

        if [[ ! -e $cwd_link ]]; then
            continue
        fi

        possible_cwd=$(readlink "$cwd_link")

        if [[ -d $possible_cwd ]]; then
            cwd=$possible_cwd
            break
        fi
    done
fi

if [[ -v copy_path_to_clipboard ]]; then
    xsel -ib <<<"$cwd"
    if [[ -v use_notifications ]]; then
        notify-send -i edit-copy \
            "Working directory copied to clipboard" \
            "$cwd"
    fi
fi

echo "$cwd"
