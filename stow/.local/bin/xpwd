#!/usr/bin/env bash

set -euo pipefail

me=${0##*/}
usage="
Gets the working directory of a window.

Usage: $me [-h] [-cnw] [WINDOW_ID]

Options:
    -h    show this help message
    -c    copy the path to the clipboard
    -n    notify the user about the copy
    -w    click to select the window to use

Arguments:
    WINDOW_ID    id of a window to use (e.g. 0x1234567)

If no window is selected with -w or WINDOW_ID, then the current window is used.
"

usage() {
    echo "$usage" >&2
    exit 0
}

die() {
    echo "$me: $*" >&2
    exit 1
}

tmux_window_id() {
    local session_id=${1:?missing session id}

    tmux showenv -t "$session_id" WINDOWID |
        awk -F= '{print $2}' | tr -d '[:space:]' |
        xargs -r -I{} printf "0x%x" "{}"
}

tmux_session_id() {
    local window_id=$1

    readarray -t session_ids < <(tmux list-sessions -F '#{session_id}')

    for session_id in "${session_ids[@]}"; do
        if [[ "$(tmux_window_id "$session_id")" == "$window_id" ]]; then
            echo "$session_id"
            return 0
        fi
    done

    return 1
}

tmux_active_pane_pid() {
    local window_id=${1:?missing window id}
    local session_id

    session_id=$(tmux_session_id "$window_id")

    tmux list-panes -F '#{session_id} #{pane_active} #{pane_pid}' |
        grep -m1 "^$session_id 1 " |
        awk '{print $NF}' | tr -d '[:space:]'
}

window_id=
copy_path_to_clipboard=
use_notifications=

unset OPTIND OPTARG
while getopts ":hwcn" option; do
    case $option in
    h) usage ;;

    w) window_id=$(selected-window) ;;
    c) copy_path_to_clipboard=1 ;;
    n) use_notifications=1 ;;

    *) die "invalid option '$option'" ;;
    esac
done && shift $((OPTIND - 1))

if (($# == 0)); then
    window_id=$(active-window)
else
    window_id=$1
fi

cwd=$HOME # fallback

window_pid=$(
    xprop -id "$window_id" | grep -m1 PID |
        awk -F= '{print $2}' | tr -d '[:space:]'
)

if [[ $window_pid ]]; then
    readarray -t lines < <(
        pstree --long --show-pids --ascii --hide-threads "$window_pid" |
            head -n1 |
            sed 's/-+-.*$//' |                           # ignore branches
            sed 's/---/\n/g' |                           # one process per line
            sed 's/^\(.*\)(\([[:digit:]]\+\))$/\1=\2/' | # separate name and pid
            tac                                          # order processes by depth
    )

    for line in "${lines[@]}"; do
        name=${line%%=*}
        pid=${line##*=}

        case $name in
        # If tmux is active in this window,
        # cwd will be whatever it was when tmux was started.
        # There could be multiple panes, each with its own pid and cwd.
        tmux*) pid=$(tmux_active_pane_pid "$window_id") ;;

        # Vim uses xclip to interact with the clipboard.
        # It will be the innermost process, and encountered first.
        # Its working directory is meaningless, so skip it.
        xclip) continue ;;
        esac

        cwd_link=/proc/$pid/cwd
        [[ -e $cwd_link ]] || continue

        possible_cwd=$(readlink "$cwd_link")
        if [[ -d $possible_cwd ]]; then
            cwd=$possible_cwd
            break
        fi
    done
fi

if [[ $copy_path_to_clipboard ]]; then
    xsel -ib <<<"$cwd"
    if [[ $use_notifications ]]; then
        notify-send -i edit-copy "Working directory copied to clipboard:" "$cwd"
    fi
fi

echo -n "$cwd"
