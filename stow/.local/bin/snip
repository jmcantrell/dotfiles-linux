#!/usr/bin/env bash

set -eu

me=${0##*/}
usage="Interact with text snippets.

Usage: $me [-h] [-l] [-pecst NAME]

Options:
    -h         show this help message
    -l         list snippets
    -p NAME    print snippet to stdout
    -e NAME    edit snippet in preferred editor
    -c NAME    copy snippet to clipboard
    -s NAME    save clipboard to snippet
    -t NAME    type snippet in active window
    -d NAME    delete snippet
"

snippets_dir=${XDG_CONFIG_HOME:-$HOME/.config}/snip/snippets

usage() {
    echo "$usage" >&2
    exit 0
}

die() {
    echo "$me: $*" >&2
    exit 1
}

list_snippets() {
    if [[ -d $snippets_dir ]]; then
        find "$snippets_dir" -type f -exec basename {} \;
    fi
}

snippet_file() {
    echo "$snippets_dir/${1:?missing snippet name}"
}

snippet_file_required() {
    local file
    file=$(snippet_file "$1")
    [[ -f $file ]] || die "snippet '$name' not found"
    echo "$file"
}

print_snippet() {
    cat "$(snippet_file_required "$1")"
}

edit_snippet() {
    mkdir -p "$snippets_dir"
    exec "${VISUAL:-$EDITOR}" "$(snippet_file "$1")"
}

copy_snippet() {
    local name=$1
    xsel --input --clipboard <"$(snippet_file_required "$name")"
    notify-send -i edit-copy "Snippet Text for '$name' Copied to the Clipboard"
}

save_snippet() {
    local name=$1
    mkdir -p "$snippets_dir"
    xsel --output --clipboard >"$(snippet_file "$name")"
    notify-send -i document-save "Snippet Text for '$name' Saved from the Clipboard"
}

type_snippet() {
    xdotool type --clearmodifiers --delay 25 --file "$(snippet_file_required "$1")"
}

delete_snippet() {
    rm -f "$(snippet_file_required "$1")"
}

(($# == 0)) && set -- -h

unset OPTIND OPTARG
while getopts ":hlp:e:c:s:t:d:" option; do
    case $option in
    h) usage ;;
    l) list_snippets ;;
    p) print_snippet "$OPTARG" ;;
    e) edit_snippet "$OPTARG" ;;
    c) copy_snippet "$OPTARG" ;;
    s) save_snippet "$OPTARG" ;;
    t) type_snippet "$OPTARG" ;;
    d) delete_snippet "$OPTARG" ;;
    *) die "invalid option: $option" ;;
    esac
done && shift $((OPTIND - 1))
