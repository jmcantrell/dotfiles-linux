#!/usr/bin/env bash

set -e

delay=0
device=/dev/video0

me=${0##*/}
usage="Capture input from a video device.

Usage: $me [-h] [-x] [-i DEVICE] [-t NUMBER] [-d NUMBER] FILENAME

Options:
    -h           show this help message
    -x           stop recording
    -i DEVICE    capture from DEVICE (default: $device)
    -t NUMBER    capture for NUMBER seconds (default: record indefinitely)
    -d NUMBER    delay capture by NUMBER seconds (default: $delay)

Arguments:
    FILENAME     output capture to FILENAME

Examples:
    $me -d3 -t5 reaction.gif
        Capture a five second animated gif after a three second countdown.

The output filename can include any format sequence accepted by date(1).
"

pid_file=${XDG_CACHE_HOME:-$HOME/.cache}/$me/pid

usage() {
    echo "$usage" >&2
    exit 0
}

die() {
    echo "$me: $*" >&2
    exit 1
}

stop_recording() {
    [[ -f $pid_file ]] || die "nothing is recording"
    pkill -INT -P "$(<"$pid_file")" ffmpeg
    exit 0
}

while getopts ":hi:t:d:x" option; do
    case $option in
    h) usage ;;

    i) device=$OPTARG ;;
    t) duration=$OPTARG ;;
    d) delay=$OPTARG ;;

    x) stop_recording ;;

    *) die "invalid option '$option'" ;;
    esac
done && shift $((OPTIND - 1))

output=$1

[[ $output ]] || die "missing output file"
((delay >= 0)) || die "delay must be a non-negative number"

output=$(date +"$output")
output=$(realpath "$output")
mkdir -p "$(dirname "$output")"

options=(-y -f v4l2 -i "$device" -f alsa -i default)
[[ $duration ]] && options+=(-t "$duration")

mkdir -p "$(dirname "$pid_file")"
echo "$$" >"$pid_file"
trap 'rm -f "$pid_file"' INT TERM EXIT

if ((delay > 0)); then
    for ((tick = 1; tick <= delay; tick += 1)); do
        sleep 1
        canberra-gtk-play -i message-new-instant &
    done
fi

ffmpeg "${options[@]}" "$output"
canberra-gtk-play -i camera-shutter &

echo -n "$output"
xsel -ib <<<"$output"

notify-send -i media-record "Captured Video" "<u>${output/$HOME/\~}</u>" &

xdg-open "$output" &
