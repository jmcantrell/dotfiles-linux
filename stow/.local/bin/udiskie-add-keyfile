#!/usr/bin/env bash

set -eu

config_dir=${XDG_CONFIG_HOME:-$HOME/.config}/udiskie
keyfile_dir=${XDG_DATA_HOME:-$HOME/.local/share}/udiskie/keyfiles

name=${0##*/}
usage="Map a key file to a device in udiskie.

Usage:
    $name [OPTIONS] DEVICE [KEYFILE]

Options:
    -C DIRECTORY    udiskie configuration directory
                    (default: ${config_dir/$HOME/\~})

Arguments:
    DEVICE          device to unlock with KEYFILE   
    KEYFILE         file capable of unlocking DEVICE

If KEYFILE is not provided, one will be generated and added to the device.
"

die() {
    printf "ERROR: %s\n" "$*" >&2
    exit 1
}

while getopts ":C:h" option; do
    case $option in
    C) config_dir=$OPTARG ;;
    h)
        printf "%s\n" "$usage"
        exit
        ;;
    *) die "Invalid option '$OPTARG'" ;;
    esac
done && shift $((OPTIND - 1))

if [[ ! -v 1 ]]; then
    die "Missing device"
fi

device=$1
shift

if ! uuid=$(sudo blkid -s UUID -o value "$device"); then
    die "Unable to get UUID for device"
fi

if [[ -z $uuid ]]; then
    die "Device does not have a UUID"
fi

keyfile=${1:-$keyfile_dir/$uuid.bin}

if [[ ! -e $keyfile ]]; then
    mkdir -p "$(dirname "$keyfile")"
    touch "$keyfile"
    chmod -v 600 "$keyfile"
    dd bs=512 count=8 if=/dev/urandom of="$keyfile"
    sudo cryptsetup luksAddKey "$device" "$keyfile"
fi

config_file=$config_dir/config.json

if [[ ! -f "$config_file" ]]; then
    mkdir -p "$config_dir"
    jq -n '.device_config=[]' >"$config_file"
fi

index=$(
    jq --arg uuid "$uuid" \
        '.device_config | map(.id_uuid == $uuid) | index(true)' \
        "$config_file"
)

args=(--arg keyfile "${keyfile/$HOME/\~}")

if [[ $index == null ]]; then
    args+=(--arg uuid "$uuid")
    query='.device_config += [{ "id_uuid": $uuid, "keyfile": $keyfile }]'
else
    args+=(--arg index "$index")
    query='.device_config[$index | tonumber].keyfile=$keyfile'
fi

jq "${args[@]}" "$query" "$config_file" >"$config_file.tmp"
mv "$config_file.tmp" "$config_file"
