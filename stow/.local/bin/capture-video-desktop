#!/usr/bin/env bash

set -eu

delay=0
directory=$HOME
file_name=desktop_%FT%T%:z
file_type=mp4

name=${0##*/}
usage="Capture video of the desktop.

Usage:
    $name [OPTIONS] [FILE | 'stop']
    
Options:
    -g GEOMETRY     geometry of region to capture

    -f              capture focused window
    -r              select region to capture
    -s              select window to capture

    -a              also capture audio from microphone

    -d NUMBER       number of seconds to wait before starting capture
                    (default: $delay)

    -D DIRECTORY    directory in which to store default output file
                    (default: $directory)

    -N FILENAME     filename to use for default output file
                    (default: $file_name)

    -E EXTENSION    extension to use for default output file
                    (default: $file_type)

Arguments:
    FILE            output file (used instead of default)
                    formats any sequences recognized by strftime
                    (default: $directory/$file_name.$file_type)

    'stop'          stop recording session
"

geometry_format='\(.x),\(.y) \(.width)x\(.height)'

focused_window_geometry() {
    swaymsg -t get_tree |
        jq -r ".. | select(.rect? and .visible? and .focused?) | .rect | \"$geometry_format\""
}

select_window_geometry() {
    swaymsg -t get_tree |
        jq -r ".. | select(.rect? and .visible?) | .rect | \"$geometry_format\"" |
        slurp -r
}

while getopts ":g:rfsad:D:N:E:h" option; do
    case $option in
    g) geometry=$OPTARG ;;
    r) geometry=$(slurp) ;;
    f) geometry=$(focused_window_geometry) ;;
    s) geometry=$(select_window_geometry) ;;
    a) capture_audio=1 ;;
    d) delay=$OPTARG ;;
    D) directory=$OPTARG ;;
    N) file_name=$OPTARG ;;
    E) file_type=$OPTARG ;;
    h)
        printf "%s\n" "$usage"
        exit
        ;;
    *)
        printf "ERROR: Invalid option '%s'\n" "$OPTARG"
        exit 1
        ;;
    esac
done && shift $((OPTIND - 1))

capture_command_pid_file=$XDG_RUNTIME_DIR/$name-recorder.pid

if [[ -v 1 && $1 == stop ]]; then
    if [[ -f $capture_command_pid_file ]]; then
        kill "$(<"$capture_command_pid_file")"
    fi
    exit 0
fi

output_file=$(date +"${1:-$directory/$file_name.$file_type}")

capture_command=(wf-recorder)

if [[ -v geometry ]]; then
    capture_command+=(-g "$geometry")
fi

if [[ -v capture_audio ]]; then
    capture_command+=(-a)
fi

if [[ $output_file == *.gif ]]; then
    capture_command+=(-c gif)
fi

if ((delay > 0)); then
    canberra-gtk-play -l "$delay" -i message
fi

mkdir -p "$(dirname "$output_file")"
capture_command+=(-f "$output_file")

if ! tty -s; then
    "${capture_command[@]}" &
    echo "$!" >"$capture_command_pid_file"
    trap 'rm "$capture_command_pid_file"' INT TERM EXIT
    wait -f
else
    "${capture_command[@]}"
fi

canberra-gtk-play -i camera-shutter &

notify-send -i media-record \
    "Captured desktop video${capture_audio:+ (with audio)}" \
    "<u>${output_file/$HOME/\~}</u>" &

wl-copy -n <<<"$output_file"

printf "%s" "$output_file"
