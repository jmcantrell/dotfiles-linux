#!/usr/bin/env bash

set -eu -o pipefail

me=${0##*/}
usage="Print the working directory of a window.

Usage:
    $me [ID]

Arguments:
    ID    print directory for window ID
          (default: focused window)
"

usage() {
    printf "%s\n" "$usage"
    exit 0
}

die() {
    printf "ERROR: %s\n" "$*" >&2
    exit 1
}

while getopts ":h" option; do
    case $option in
    h) usage ;;
    *) die "Invalid option '$OPTARG'" ;;
    esac
done && shift "$((OPTIND - 1))"

if [[ -v 1 ]]; then
    window_pid=$(
        swaymsg -t get_tree |
            jq -r --argjson id "$1" '.. | select(.pid? and .id? and .id == $id) | .pid'
    )
else
    window_pid=$(
        swaymsg -t get_tree |
            jq -r '.. | select(.pid? and .visible? and .focused?) | .pid'
    )
fi

# If unable to get a window PID, provide a fallback.
if [[ -z $window_pid ]]; then
    printf "$HOME"
    exit 0
fi

pid=$window_pid

while next_pid=$(pgrep --parent "$pid" | head -n1); do
    # Some child processes don't inherit the working directory of the
    # parent process. If they are encountered, stop looking for children.
    case "$(readlink /proc/"$next_pid"/exe)" in
    */wl-copy) break ;;
    esac

    pid=$next_pid
done

readlink /proc/"$pid"/cwd
